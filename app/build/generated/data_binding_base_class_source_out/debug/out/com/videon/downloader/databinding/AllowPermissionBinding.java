// Generated by view binder compiler. Do not edit!
package com.videon.downloader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.videon.downloader.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AllowPermissionBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LottieAnimationView animationView;

  @NonNull
  public final MaterialButton btnAllow;

  @NonNull
  public final MaterialCardView cardPermission;

  @NonNull
  public final TextView tvPermissoin;

  private AllowPermissionBinding(@NonNull MaterialCardView rootView,
      @NonNull LottieAnimationView animationView, @NonNull MaterialButton btnAllow,
      @NonNull MaterialCardView cardPermission, @NonNull TextView tvPermissoin) {
    this.rootView = rootView;
    this.animationView = animationView;
    this.btnAllow = btnAllow;
    this.cardPermission = cardPermission;
    this.tvPermissoin = tvPermissoin;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static AllowPermissionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AllowPermissionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.allow_permission, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AllowPermissionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animation_view;
      LottieAnimationView animationView = ViewBindings.findChildViewById(rootView, id);
      if (animationView == null) {
        break missingId;
      }

      id = R.id.btnAllow;
      MaterialButton btnAllow = ViewBindings.findChildViewById(rootView, id);
      if (btnAllow == null) {
        break missingId;
      }

      MaterialCardView cardPermission = (MaterialCardView) rootView;

      id = R.id.tvPermissoin;
      TextView tvPermissoin = ViewBindings.findChildViewById(rootView, id);
      if (tvPermissoin == null) {
        break missingId;
      }

      return new AllowPermissionBinding((MaterialCardView) rootView, animationView, btnAllow,
          cardPermission, tvPermissoin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
