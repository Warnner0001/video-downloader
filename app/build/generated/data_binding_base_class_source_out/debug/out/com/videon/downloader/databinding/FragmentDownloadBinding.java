// Generated by view binder compiler. Do not edit!
package com.videon.downloader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textview.MaterialTextView;
import com.videon.downloader.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDownloadBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout btnDownload;

  @NonNull
  public final ConstraintLayout btnPaste;

  @NonNull
  public final ConstraintLayout conHome;

  @NonNull
  public final ConstraintLayout conTop;

  @NonNull
  public final MaterialCardView conUrl;

  @NonNull
  public final TextInputEditText editTextUrl;

  @NonNull
  public final NestedScrollView nestedScrollViewHome;

  @NonNull
  public final NoDataFoundBinding noData;

  @NonNull
  public final RecyclerView rvDownloader;

  @NonNull
  public final MaterialTextView tvDownload;

  @NonNull
  public final MaterialTextView tvPaste;

  private FragmentDownloadBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout btnDownload, @NonNull ConstraintLayout btnPaste,
      @NonNull ConstraintLayout conHome, @NonNull ConstraintLayout conTop,
      @NonNull MaterialCardView conUrl, @NonNull TextInputEditText editTextUrl,
      @NonNull NestedScrollView nestedScrollViewHome, @NonNull NoDataFoundBinding noData,
      @NonNull RecyclerView rvDownloader, @NonNull MaterialTextView tvDownload,
      @NonNull MaterialTextView tvPaste) {
    this.rootView = rootView;
    this.btnDownload = btnDownload;
    this.btnPaste = btnPaste;
    this.conHome = conHome;
    this.conTop = conTop;
    this.conUrl = conUrl;
    this.editTextUrl = editTextUrl;
    this.nestedScrollViewHome = nestedScrollViewHome;
    this.noData = noData;
    this.rvDownloader = rvDownloader;
    this.tvDownload = tvDownload;
    this.tvPaste = tvPaste;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDownloadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDownloadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_download, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDownloadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDownload;
      ConstraintLayout btnDownload = ViewBindings.findChildViewById(rootView, id);
      if (btnDownload == null) {
        break missingId;
      }

      id = R.id.btnPaste;
      ConstraintLayout btnPaste = ViewBindings.findChildViewById(rootView, id);
      if (btnPaste == null) {
        break missingId;
      }

      id = R.id.conHome;
      ConstraintLayout conHome = ViewBindings.findChildViewById(rootView, id);
      if (conHome == null) {
        break missingId;
      }

      id = R.id.conTop;
      ConstraintLayout conTop = ViewBindings.findChildViewById(rootView, id);
      if (conTop == null) {
        break missingId;
      }

      id = R.id.conUrl;
      MaterialCardView conUrl = ViewBindings.findChildViewById(rootView, id);
      if (conUrl == null) {
        break missingId;
      }

      id = R.id.editTextUrl;
      TextInputEditText editTextUrl = ViewBindings.findChildViewById(rootView, id);
      if (editTextUrl == null) {
        break missingId;
      }

      id = R.id.nestedScrollView_home;
      NestedScrollView nestedScrollViewHome = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollViewHome == null) {
        break missingId;
      }

      id = R.id.noData;
      View noData = ViewBindings.findChildViewById(rootView, id);
      if (noData == null) {
        break missingId;
      }
      NoDataFoundBinding binding_noData = NoDataFoundBinding.bind(noData);

      id = R.id.rvDownloader;
      RecyclerView rvDownloader = ViewBindings.findChildViewById(rootView, id);
      if (rvDownloader == null) {
        break missingId;
      }

      id = R.id.tvDownload;
      MaterialTextView tvDownload = ViewBindings.findChildViewById(rootView, id);
      if (tvDownload == null) {
        break missingId;
      }

      id = R.id.tvPaste;
      MaterialTextView tvPaste = ViewBindings.findChildViewById(rootView, id);
      if (tvPaste == null) {
        break missingId;
      }

      return new FragmentDownloadBinding((ConstraintLayout) rootView, btnDownload, btnPaste,
          conHome, conTop, conUrl, editTextUrl, nestedScrollViewHome, binding_noData, rvDownloader,
          tvDownload, tvPaste);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
